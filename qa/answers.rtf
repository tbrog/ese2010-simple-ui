{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\paperw11900\paperh16840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sl420\ql\qnatural
\ls1\ilvl0
\f0\fs28 \cf2 {\listtext	1.	}Explain how a typical HTTP request is processed with the framework (the request lifecycle)\
{\listtext	2.	}How could you test user interfaces with the testing facilities in play! framework?\
\pard\pardeftab720\sl420\sa420\ql\qnatural
\cf2 \
\pard\pardeftab720\sl420\ql\qnatural
\cf2 If an HTTP request is received by the framework the router component tries to find the most specific route able to accept the request and this action method is invoked.\
The action method lets the application code be executed. Then if necessary a template file is rendered by the render() method, The result of the invoked action method is subsequently written as an HTTP response.\
\
You could use the selenium-tests. These tests are written in an html file and are able to test the interface.\
Furthermore there are functional tests which test the underlying functions of the interface.\
\pard\pardeftab720\sl420\sa420\ql\qnatural
\cf2 \
}